<TEI xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader xmlns="http://www.tei-c.org/ns/1.0" xml:id="{{ object.file_name }}">
        <fileDesc>
            <titleStmt>
                <title type="main">{% for x in info.main_person %}{{ x.value }}{% endfor %}: {{ info.shelfmark }}
                </title>
                <title type="sub">Grocers of Istanbul: Tracing Food Consumption (GrocerIST)</title>
                <principal>
                    <persName role="acdh:hasPrincipialInvestigator" key="https://orcid.org/0000-0002-8740-5275">Yavuz
                        KÃ¶se</persName>
                </principal>
                <funder>
                    <name>FWF - Der Wissenschaftsfonds</name>
                    <address>
                        <street>Sensengasse 1</street>
                        <postCode>1090 Wien</postCode>
                        <placeName>
                            <country>A</country>
                            <settlement>Wien</settlement>
                        </placeName>
                    </address>
                </funder>
                <respStmt>
                    <resp>Transcription and Annotation</resp>
                    <persName role="acdh:hasCreator">Suemeyye Hosgoer Bueke</persName>
                </respStmt>
                <respStmt>
                    <resp>XML/TEI creation</resp>
                    <persName role="acdh:hasContributor" key="https://orcid.org/0000-0002-9575-9372">Peter Andorfer
                    </persName>
                </respStmt>
            </titleStmt>
            <publicationStmt>
                <p>Publication Information</p>
            </publicationStmt>
            <sourceDesc>
                <msDesc>
                    <msIdentifier>
                        <institution>Name of the Archive</institution>
                        <repository>Name of the Repository</repository>
                        <idno type="archive">{{ info.shelfmark }}</idno>
                    </msIdentifier>
                    <history>{% if info.creation_date_ISO %}
                        <origin when-iso="{{ info.creation_date_ISO }}" />{% else %}
                        <origin notBefore="1700" notAfter="1900" /> {% endif %}
                    </history>
                </msDesc>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <geoDecl xml:id="dd" datum="WGS84-DD">World Geodetic System: decimal degrees</geoDecl>
        </encodingDesc>
        <profileDesc>
            <abstract>
                <ab>Transcription of the grocerist shop inventory with shelfmark <idno>{{ info.shelfmark }}</idno>
                </ab>
            </abstract>

            <creation>
                {# do we have the creation date of the transcript somewhere? #}
                {# origDate? docDate? #}
                {% if info.creation_date_miladi %}
                <date calendar="#gregorian" when="{{ info.creation_date_miladi }}">{{ info.creation_date_miladi }}
                </date>
                {% endif %}
                {% if info.year_of_creation_hicri %}
                <date calendar="#islamic" when="{{ info.year_of_creation_hicri }}">{{ info.year_of_creation_hicri }}
                </date>
                {% endif %}
            </creation>
        </profileDesc>
    </teiHeader>
    <standOff>
        <listPlace>
            <place>
                <location>
                    <geo decls="#dd">{{ info.lat }} {{ info.long }}</geo>
                </location>
            </place>
            {% for x in info.district %}
            <place xml:id="district__{{ x.id }}" type="district">
                <placeName>{{ x.value }}</placeName>
            </place>
            {% endfor %}
            {% for x in info.neighbourhood %}
            <place xml:id="neighbourhood__{{ x.id }}" type="neighbourhood">
                <placeName>{{ x.value }}</placeName>
            </place>
            {% endfor %}
            {% for x in info.nahiye %}
            <place xml:id="nahiye__{{ x.id }}" type="nahiye">
                <placeName>{{ x.value }}</placeName>
            </place>
            {% endfor %}
            {% for x in info.quarter %}
            <place xml:id="quarter__{{ x.id }}" type="quarter">
                <placeName>{{ x.value }}</placeName>
            </place>
            {% endfor %}
            {% for x in info.karye %}
            <place xml:id="karye__{{ x.id }}" type="karye">
                <placeName>{{ x.value }}</placeName>
            </place>
            {% endfor %}
            {% for x in info.address %}
            <place xml:id="address__{{ x.id }}" type="address">
                <placeName>{{ x.value }}</placeName>
            </place>
            {% endfor %}
        </listPlace>
        <listPerson>
            {# because of baserow, main_person is a list, but there is only one main person #}
            {% set main_person = info.main_person[0] -%}
            <person role="main_person" xml:id="person__{{main_person.id }}">
                <persName>{{ main_person.name }}</persName>
                <state type="status"><label>{{ info.status_of_main_person.value |lower }}</label></state>
                {% for r in main_person.religion %}
                <faith>{{ r.value }}</faith>
                {% endfor %}
            </person>
            {% for x in info.mentioned_persons %}
            <person role="mentioned">
                <persName>{{ x.value }}</persName>
            </person>{% endfor %}
        </listPerson>
        <listRelation>
            <relation type="ownership" name="{{ info.type_of_ownership.value |lower}}" active="#person__{{ main_person.id }}">
            </relation>
        </listRelation>
        {% if info.goods %}
        <list type="inventory">
            {% for x in info.goods %}
            <item xml:id="goods__{{ x.id }}">
                <name xml:lang="tr">{{ x.name }}</name>
                {% if x.english_names%}
                {% for translation in x.english_names.split(',') %}
                <name xml:lang="en">{{ translation.strip() }}</name>
                {% endfor %}
                {% endif%}
                {% if x.spelling_variations_and_synonyms %}
                {% for variation in x.spelling_variations_and_synonyms.split(',') %}
                <name xml:lang="tr" type="variation">{{ variation.strip() }}</name>
                {% endfor %}
                {% endif %}
                {% if x.notes %}
                <note>{{ x.notes }}</note>
                {% endif %}
                {# following code is a commented out because sophisticated and broken_or_spoilt values are all "false"
                #}
                {#
                <state>
                    <desc>
                        <list>
                            {% if x.sophisticated %}
                            <item>sophisticated</item>
                            {% else %}
                            <item>not sophisticated</item>
                            {% endif %}
                            {% if x.broken_or_spoilt %}
                            <item>broken or spoilt</item>
                            {% endif %}
                        </list>
                    </desc>
                </state>
                #}
            </item>
            {% endfor %}
        </list>
        {% endif %}
    </standOff>
    <text>

        <body>
            {{ object.body|safe }}
        </body>
    </text>
</TEI>